class Solution {
    public int numMatchingSubseq(String s, String[] words) {
        Map<Character,Queue<String>> map= new HashMap<>();
        int ans=0;
        
        for(int i=0;i<s.length();i++)
            map.putIfAbsent(s.charAt(i),new LinkedList<>());
        
        for(String word: words){
            char Start= word.charAt(0);
            if(map.containsKey(Start))
                map.get(Start).offer(word);
        }
        
        for(int i= 0; i<s.length();i++){
            char start= s.charAt(i);
            Queue<String> q= map.get(start);    //temp queue of strings 
            int size= q.size();                 //starting from charAt(i)
            for(int k=0;k<size;k++){
                String str= q.poll();           //1 string pulled out
                if(str.substring(1).length()==0)
                    ans++;
                else 
                    if(map.containsKey(str.charAt(1))){
                        map.get(str.charAt(1)).add(str.substring(1));
                    }
            }
        }
        return ans;
        
    }
}